{"version":3,"sources":["useCategories.js","App.js","index.js"],"names":["useCategories","categories","setCategories","useState","id","name","tasks","addCategory","Date","now","updateCategoryName","newName","map","cat","deleteCategory","filter","addTask","categoryId","task","trim","text","completed","deleteTask","taskIndex","_","i","toggleComplete","App","searchTerm","setSearchTerm","searchError","setSearchError","carouselRef","useRef","handleSearch","foundCategory","find","category","toLowerCase","includes","categoryElement","document","getElementById","current","containerRect","getBoundingClientRect","categoryRect","scrollLeft","left","width","scrollTo","behavior","filteredCategories","React","createElement","className","onClick","scrollBy","type","placeholder","value","onChange","e","target","onKeyDown","key","scrollRight","ref","index","readOnly","rows","shiftKey","preventDefault","textarea","previousElementSibling","handleAddCategory","setTimeout","scrollWidth","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.9b3085d7.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useCategories = () => {\r\n  const [categories, setCategories] = useState([\r\n    { id: 1, name: \"\", tasks: [] },\r\n  ]);\r\n\r\n  const addCategory = () => {\r\n    setCategories([...categories, { id: Date.now(), name: \"\", tasks: [] }]);\r\n  };\r\n\r\n  const updateCategoryName = (id, newName) => {\r\n    setCategories(\r\n      categories.map((cat) => (cat.id === id ? { ...cat, name: newName } : cat))\r\n    );\r\n  };\r\n\r\n  const deleteCategory = (id) => {\r\n    setCategories(categories.filter((cat) => cat.id !== id));\r\n  };\r\n\r\n  const addTask = (categoryId, task) => {\r\n    if (!task.trim()) return;\r\n    setCategories(\r\n      categories.map((cat) =>\r\n        cat.id === categoryId\r\n          ? { ...cat, tasks: [...cat.tasks, { text: task, completed: false }] }\r\n          : cat\r\n      )\r\n    );\r\n  };\r\n\r\n  const deleteTask = (categoryId, taskIndex) => {\r\n    setCategories(\r\n      categories.map((cat) =>\r\n        cat.id === categoryId\r\n          ? { ...cat, tasks: cat.tasks.filter((_, i) => i !== taskIndex) }\r\n          : cat\r\n      )\r\n    );\r\n  };\r\n\r\n  const toggleComplete = (categoryId, taskIndex) => {\r\n    setCategories(\r\n      categories.map((cat) =>\r\n        cat.id === categoryId\r\n          ? {\r\n              ...cat,\r\n              tasks: cat.tasks.map((task, i) =>\r\n                i === taskIndex ? { ...task, completed: !task.completed } : task\r\n              ),\r\n            }\r\n          : cat\r\n      )\r\n    );\r\n  };\r\n\r\n  return {\r\n    categories,\r\n    addCategory,\r\n    updateCategoryName,\r\n    deleteCategory,\r\n    addTask,\r\n    deleteTask,\r\n    toggleComplete,\r\n  };\r\n};\r\n\r\nexport default useCategories;\r\n","import React, { useRef, useState } from \"react\";\r\nimport useCategories from \"./useCategories\";\r\n\r\nconst App = () => {\r\n  const {\r\n    categories,\r\n    addCategory,\r\n    updateCategoryName,\r\n    deleteCategory,\r\n    addTask,\r\n    deleteTask,\r\n    toggleComplete,\r\n  } = useCategories();\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [searchError, setSearchError] = useState(\"\");\r\n  const carouselRef = useRef(null);\r\n\r\n  const handleAddCategory = () => {\r\n    addCategory();\r\n    setTimeout(() => {\r\n      if (carouselRef.current) {\r\n        carouselRef.current.scrollTo({\r\n          left: carouselRef.current.scrollWidth,\r\n          behavior: \"smooth\",\r\n        });\r\n      }\r\n    }, 0);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    const foundCategory = categories.find((category) =>\r\n      category.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n\r\n    if (foundCategory) {\r\n      setSearchError(\"\");\r\n      const categoryElement = document.getElementById(\r\n        `category-${foundCategory.id}`\r\n      );\r\n      if (categoryElement && carouselRef.current) {\r\n        const containerRect = carouselRef.current.getBoundingClientRect();\r\n        const categoryRect = categoryElement.getBoundingClientRect();\r\n        const scrollLeft =\r\n          categoryRect.left -\r\n          containerRect.left -\r\n          containerRect.width / 2 +\r\n          categoryRect.width / 2;\r\n\r\n        carouselRef.current.scrollTo({\r\n          left: carouselRef.current.scrollLeft + scrollLeft,\r\n          behavior: \"smooth\",\r\n        });\r\n      }\r\n    } else {\r\n      setSearchError(\"Category not found.\");\r\n    }\r\n  };\r\n\r\n  const scrollLeft = () => {\r\n    if (carouselRef.current) {\r\n      carouselRef.current.scrollBy({ left: -300, behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  const scrollRight = () => {\r\n    if (carouselRef.current) {\r\n      carouselRef.current.scrollBy({ left: 300, behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  const filteredCategories = categories.filter((category) =>\r\n    category.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"top-bar\">\r\n        <button onClick={scrollLeft}>◄</button>\r\n        <div className=\"search-bar\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search category...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            onKeyDown={(e) => {\r\n              if (e.key === \"Enter\") {\r\n                handleSearch();\r\n              }\r\n            }}\r\n          />\r\n          <button onClick={handleSearch}>🔍</button>\r\n        </div>\r\n        <button onClick={scrollRight}>►</button>\r\n      </div>\r\n      {searchError && <div className=\"search-error\">{searchError}</div>}\r\n      <div className=\"task-groups\" ref={carouselRef}>\r\n        {filteredCategories.map((category) => (\r\n          <div\r\n            key={category.id}\r\n            id={`category-${category.id}`}\r\n            className=\"task-group\"\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Category Name\"\r\n              value={category.name}\r\n              onChange={(e) => updateCategoryName(category.id, e.target.value)}\r\n            />\r\n            <button onClick={() => deleteCategory(category.id)}>🗑️</button>\r\n            <div className=\"tasks-container\">\r\n              {category.tasks.map((task, index) => (\r\n                <div key={index} className=\"task-item\">\r\n                  <textarea\r\n                    readOnly\r\n                    value={task.text}\r\n                    className={task.completed ? \"completed\" : \"\"}\r\n                    onClick={() => toggleComplete(category.id, index)}\r\n                  />\r\n                  <button onClick={() => deleteTask(category.id, index)}>\r\n                    ❌\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"task-input\">\r\n              <textarea\r\n                placeholder=\"New Task\"\r\n                rows={5}\r\n                onKeyDown={(e) => {\r\n                  if (e.key === \"Enter\" && !e.shiftKey) {\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              />\r\n              <button\r\n                onClick={(e) => {\r\n                  const textarea = e.target.previousElementSibling;\r\n                  if (textarea && textarea.value.trim()) {\r\n                    addTask(category.id, textarea.value); // Przekazujemy wartość pola tekstowego\r\n                    textarea.value = \"\";\r\n                  }\r\n                }}\r\n              >\r\n                ⬅️\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <button className=\"add-category\" onClick={handleAddCategory}>\r\n          +\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./App\";\r\nimport \"./styles.css\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}