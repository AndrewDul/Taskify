{"version":3,"sources":["useCategories.js","App.js","index.js"],"names":["useCategories","categories","setCategories","useState","addCategory","newCategory","id","Date","now","name","length","tasks","prev","updateCategoryName","newName","map","cat","deleteCategory","filter","addTask","categoryId","text","completed","timestamp","toLocaleString","deleteTask","taskIndex","_","i","toggleComplete","task","App","searchTerm","setSearchTerm","searchError","setSearchError","taskError","setTaskError","carouselRef","useRef","handleAddCategory","useCallback","setTimeout","current","scrollTo","left","scrollWidth","behavior","checkCategoryExists","searchLower","toLowerCase","some","includes","useEffect","scroll","direction","scrollAmount","newScrollPos","scrollLeft","maxScroll","clientWidth","Math","max","min","handleTaskAdd","e","textarea","target","previousElementSibling","taskText","value","trim","handleTaskDelete","isCompleted","window","confirm","React","createElement","className","type","placeholder","onChange","aria-label","onClick","ref","category","key","maxLength","index","role","tabIndex","stopPropagation","onKeyDown","shiftKey","preventDefault","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.3d65d55e.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useCategories = () => {\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const addCategory = () => {\r\n    const newCategory = {\r\n      id: Date.now(),\r\n      name: `Category ${categories.length + 1}`,\r\n      tasks: [],\r\n    };\r\n    setCategories((prev) => [...prev, newCategory]);\r\n  };\r\n\r\n  const updateCategoryName = (id, newName) => {\r\n    setCategories((prev) =>\r\n      prev.map((cat) => (cat.id === id ? { ...cat, name: newName } : cat))\r\n    );\r\n  };\r\n\r\n  const deleteCategory = (id) => {\r\n    setCategories((prev) => prev.filter((cat) => cat.id !== id));\r\n  };\r\n\r\n  const addTask = (categoryId, text) => {\r\n    setCategories((prev) =>\r\n      prev.map((cat) =>\r\n        cat.id === categoryId\r\n          ? {\r\n              ...cat,\r\n              tasks: [\r\n                ...cat.tasks,\r\n                {\r\n                  text,\r\n                  completed: false,\r\n                  timestamp: new Date().toLocaleString(),\r\n                },\r\n              ],\r\n            }\r\n          : cat\r\n      )\r\n    );\r\n  };\r\n\r\n  const deleteTask = (categoryId, taskIndex) => {\r\n    setCategories((prev) =>\r\n      prev.map((cat) =>\r\n        cat.id === categoryId\r\n          ? {\r\n              ...cat,\r\n              tasks: cat.tasks.filter((_, i) => i !== taskIndex),\r\n            }\r\n          : cat\r\n      )\r\n    );\r\n  };\r\n\r\n  const toggleComplete = (categoryId, taskIndex) => {\r\n    setCategories((prev) =>\r\n      prev.map((cat) =>\r\n        cat.id === categoryId\r\n          ? {\r\n              ...cat,\r\n              tasks: cat.tasks.map((task, i) =>\r\n                i === taskIndex ? { ...task, completed: !task.completed } : task\r\n              ),\r\n            }\r\n          : cat\r\n      )\r\n    );\r\n  };\r\n\r\n  return {\r\n    categories,\r\n    addCategory,\r\n    updateCategoryName,\r\n    deleteCategory,\r\n    addTask,\r\n    deleteTask,\r\n    toggleComplete,\r\n  };\r\n};\r\n\r\nexport default useCategories;\r\n","import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\nimport useCategories from \"./useCategories\";\r\n\r\nconst App = () => {\r\n  const {\r\n    categories,\r\n    addCategory,\r\n    updateCategoryName,\r\n    deleteCategory,\r\n    addTask,\r\n    deleteTask,\r\n    toggleComplete,\r\n  } = useCategories();\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [searchError, setSearchError] = useState(\"\");\r\n  const [taskError, setTaskError] = useState(\"\");\r\n  const carouselRef = useRef(null);\r\n\r\n  const handleAddCategory = useCallback(() => {\r\n    addCategory();\r\n    setTimeout(() => {\r\n      if (carouselRef.current) {\r\n        carouselRef.current.scrollTo({\r\n          left: carouselRef.current.scrollWidth,\r\n          behavior: \"smooth\",\r\n        });\r\n      }\r\n    }, 100);\r\n  }, [addCategory]);\r\n\r\n  const checkCategoryExists = useCallback(() => {\r\n    const searchLower = searchTerm.toLowerCase();\r\n    return categories.some((cat) =>\r\n      cat.name.toLowerCase().includes(searchLower)\r\n    );\r\n  }, [categories, searchTerm]);\r\n\r\n  useEffect(() => {\r\n    setSearchError(checkCategoryExists() ? \"\" : \"Category not found\");\r\n  }, [checkCategoryExists]);\r\n\r\n  const scroll = useCallback((direction) => {\r\n    if (!carouselRef.current) return;\r\n\r\n    const scrollAmount = direction === \"left\" ? -300 : 300;\r\n    const newScrollPos = carouselRef.current.scrollLeft + scrollAmount;\r\n    const maxScroll =\r\n      carouselRef.current.scrollWidth - carouselRef.current.clientWidth;\r\n\r\n    carouselRef.current.scrollTo({\r\n      left: Math.max(0, Math.min(newScrollPos, maxScroll)),\r\n      behavior: \"smooth\",\r\n    });\r\n  }, []);\r\n\r\n  const handleTaskAdd = useCallback(\r\n    (e, categoryId) => {\r\n      const textarea = e.target.previousElementSibling;\r\n      const taskText = textarea?.value.trim();\r\n\r\n      if (taskText) {\r\n        addTask(categoryId, taskText);\r\n        textarea.value = \"\";\r\n      }\r\n    },\r\n    [addTask]\r\n  );\r\n\r\n  const handleTaskDelete = useCallback(\r\n    (categoryId, taskIndex, isCompleted) => {\r\n      if (!isCompleted) {\r\n        setTaskError(\"Finish the task first!\");\r\n        setTimeout(() => setTaskError(\"\"), 2000);\r\n        return;\r\n      }\r\n\r\n      if (window.confirm(\"Are you sure you want to delete this task?\")) {\r\n        deleteTask(categoryId, taskIndex);\r\n      }\r\n    },\r\n    [deleteTask]\r\n  );\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"search-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search categories...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          className=\"search-input\"\r\n          aria-label=\"Search categories\"\r\n        />\r\n        {searchError && <div className=\"error-message\">{searchError}</div>}\r\n      </div>\r\n\r\n      <div className=\"nav-buttons\">\r\n        <button\r\n          onClick={() => scroll(\"left\")}\r\n          className=\"nav-btn\"\r\n          aria-label=\"Scroll left\"\r\n        >\r\n          ←\r\n        </button>\r\n        <button\r\n          onClick={() => scroll(\"right\")}\r\n          className=\"nav-btn\"\r\n          aria-label=\"Scroll right\"\r\n        >\r\n          →\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"categories-container\" ref={carouselRef}>\r\n        {categories\r\n          .filter((cat) =>\r\n            cat.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n          )\r\n          .map((category) => (\r\n            <div key={category.id} className=\"category-card\">\r\n              <div className=\"category-header\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={category.name}\r\n                  onChange={(e) =>\r\n                    updateCategoryName(category.id, e.target.value)\r\n                  }\r\n                  placeholder=\"Category name\"\r\n                  className=\"category-name\"\r\n                  maxLength={25}\r\n                  aria-label=\"Category name\"\r\n                />\r\n                <button\r\n                  onClick={() => {\r\n                    if (\r\n                      window.confirm(\"Delete this category and all its tasks?\")\r\n                    ) {\r\n                      deleteCategory(category.id);\r\n                    }\r\n                  }}\r\n                  className=\"delete-category-btn\"\r\n                  aria-label=\"Delete category\"\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"tasks-list\">\r\n                {category.tasks.map((task, index) => (\r\n                  <div\r\n                    key={`${category.id}-${index}`}\r\n                    className={`task-item ${task.completed ? \"completed\" : \"\"}`}\r\n                    onClick={() => toggleComplete(category.id, index)}\r\n                    role=\"button\"\r\n                    tabIndex={0}\r\n                    aria-label={\r\n                      task.completed ? \"Completed task\" : \"Uncompleted task\"\r\n                    }\r\n                  >\r\n                    <div className=\"task-content\">\r\n                      <span className=\"task-text\">{task.text}</span>\r\n                      <span className=\"task-date\">\r\n                        {new Date(task.timestamp).toLocaleString()}\r\n                      </span>\r\n                    </div>\r\n                    <button\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        handleTaskDelete(category.id, index, task.completed);\r\n                      }}\r\n                      className=\"delete-task-btn\"\r\n                      aria-label=\"Delete task\"\r\n                    >\r\n                      ×\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"new-task-container\">\r\n                <textarea\r\n                  placeholder=\"New task (Shift + Enter for new line)\"\r\n                  className=\"task-input\"\r\n                  maxLength={200}\r\n                  onKeyDown={(e) => {\r\n                    if (e.key === \"Enter\" && !e.shiftKey) {\r\n                      e.preventDefault();\r\n                      handleTaskAdd(e, category.id);\r\n                    }\r\n                  }}\r\n                  aria-label=\"New task input\"\r\n                />\r\n                <button\r\n                  onClick={(e) => handleTaskAdd(e, category.id)}\r\n                  className=\"add-task-btn\"\r\n                  aria-label=\"Add task\"\r\n                >\r\n                  ➤\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n\r\n        <button\r\n          onClick={handleAddCategory}\r\n          className=\"add-category-btn\"\r\n          aria-label=\"Add new category\"\r\n        >\r\n          +\r\n        </button>\r\n      </div>\r\n\r\n      {taskError && (\r\n        <div className=\"error-message floating-error\">{taskError}</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./App\";\r\nimport \"./styles.css\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}